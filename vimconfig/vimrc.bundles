" Modeline and Notes {
"   Contains the Plugins and plugin info
" }

" Environment {

    " Basics {
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
    " }

    " Setup Plugin Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }

    " Add an UnBundle command {
    function! UnBundle(arg, ...)
      let bundle = vundle#config#init_bundle(a:arg, a:000)
      call filter(g:vundle#bundles, 'v:val["name_spec"] != "' . a:arg . '"')
    endfunction

    com! -nargs=+         UnBundle
    \ call UnBundle(<args>)
    " }

" }

" Plugins {

    " Deps {
        Plugin 'gmarik/vundle'
      " fzf {
          set rtp+=~/.fzf
          Plugin 'junegunn/fzf.vim'
      " }
    " }

    " In your .vimrc.before.local file
    " list only the plugin groups you will use
    let g:plugin_groups=['general', 'writing', 'neocomplete', 'programming', 'python', 'misc','youcompleteme','scala', 'go', 'ruby']

    " To override all the included Plugins, add the following to your
    " .vimrc.bundles.local file:
    "
    " General {
        if count(g:plugin_groups, 'general')
            Plugin 'takac/vim-hardtime'
            Plugin 'scrooloose/nerdtree'
            Plugin 'altercation/vim-colors-solarized'
            Plugin 'spf13/vim-colors'
            Plugin 'tpope/vim-surround'
            Plugin 'tpope/vim-repeat'
            Plugin 'rhysd/conflict-marker.vim'
            Plugin 'jiangmiao/auto-pairs'
            Plugin 'junegunn/limelight.vim'
            Plugin 'terryma/vim-multiple-cursors'
            Plugin 'vim-scripts/sessionman.vim'
            if (has("python") || has("python3"))
                set rtp+=/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/powerline/bindings/vim
                set laststatus=2
                set t_Co=256
                Plugin 'powerline/powerline'
            else
                Plugin 'vim-airline/vim-airline'
                Plugin 'vim-airline/vim-airline-themes'
            endif
            Plugin 'powerline/fonts'
            Plugin 'bling/vim-bufferline'
            Plugin 'easymotion/vim-easymotion'
            Plugin 'jistr/vim-nerdtree-tabs'
            Plugin 'flazz/vim-colorschemes'
            Plugin 'mbbill/undotree'
            Plugin 'nathanaelkane/vim-indent-guides'
            if !exists('g:no_views')
                Plugin 'vim-scripts/restore_view.vim'
            endif
            Plugin 'mhinz/vim-signify'
            Plugin 'tpope/vim-abolish.git'
            Plugin 'osyo-manga/vim-over'
            Plugin 'kana/vim-textobj-user'
            Plugin 'kana/vim-textobj-indent'
            Plugin 'gcmt/wildfire.vim'
        endif
    " }

    " Writing {
        if count(g:plugin_groups, 'writing')
            Plugin 'reedes/vim-litecorrect'
            Plugin 'reedes/vim-textobj-sentence'
            Plugin 'reedes/vim-textobj-quote'
            Plugin 'reedes/vim-wordy'
        endif
    " }

    " General Programming {
        if count(g:plugin_groups, 'programming')
            " Pick one of the checksyntax, jslint, or syntastic
            Plugin 'tpope/vim-fugitive'
            Plugin 'mattn/webapi-vim'
            Plugin 'mattn/gist-vim'
            Plugin 'scrooloose/nerdcommenter'
            Plugin 'tpope/vim-commentary'
            Plugin 'godlygeek/tabular'
            Plugin 'luochen1990/rainbow'
            if executable('ctags')
                Plugin 'majutsushi/tagbar'
            endif
        endif
    " }

    " Snippets & AutoComplete {
        if count(g:plugin_groups, 'youcompleteme')
            Plugin 'Valloric/YouCompleteMe'
            Plugin 'SirVer/ultisnips'
            Plugin 'honza/vim-snippets'
        endif
    " }

    " Python {
        if count(g:plugin_groups, 'python')
            " Pick either python-mode or pyflakes & pydoc
            Plugin 'yssource/python.vim'
            Plugin 'python_match.vim'
            Plugin 'pythoncomplete'
        endif
    " }

    " Scala {
        if count(g:plugin_groups, 'scala')
            Plugin 'derekwyatt/vim-scala'
            Plugin 'derekwyatt/vim-sbt'
            Plugin 'xptemplate'
        endif
    " }

    " Ruby {
        if count(g:plugin_groups, 'ruby')
            Plugin 'tpope/vim-rails'
            let g:rubycomplete_buffer_loading = 1
            "let g:rubycomplete_classes_in_global = 1
            "let g:rubycomplete_rails = 1
        endif
    " }

    " Go Lang {
        if count(g:plugin_groups, 'go')
            "Plugin 'Blackrush/vim-gocode'
            Plugin 'fatih/vim-go'
        endif
    " }

    " Misc {
        if count(g:plugin_groups, 'misc')
          Plugin 'rust-lang/rust.vim'
          Plugin 'tpope/vim-markdown'
          Plugin 'spf13/vim-preview'
          Plugin 'tpope/vim-cucumber'
          Plugin 'cespare/vim-toml'
          Plugin 'quentindecock/vim-cucumber-align-pipes'
          Plugin 'saltstack/salt-vim'
          "Plugin 'MarcWeber/vim-addon-mw-utils'
          "Plugin 'tomtom/tlib_vim'
        endif
    " }

" }

