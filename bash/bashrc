


#export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11R6/bin:/usr/local/sbin:/usr/share:/usr/texbin:/usr/local/go/bin
#export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home
#export HADOOP_PREFIX=/Users/milind/WFMilind/opensource/hadoop/hadoop-2.7.0/
#export M2_HOME=/usr/local/apache-maven
#export PATH=$PATH:$M2_HOME/bin
#export JUNIT_HOME="$HOME/junit"
#export PATH="$PATH:$JUNIT_HOME"
#export CLASSPATH="$CLASSPATH:$JUNIT_HOME/junit-4.12.jar:$JUNIT_HOME/hamcrest-core-1.3.jar"


# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

#ls command alias
# some more ls aliases
#+
#The ls -F command in Linux is used to list directory contents with a special character at the end of each name to indicate the type of file. Here's a quick breakdown:
#
#Directories: A / is appended.
#Executable files: A * is appended.
#Symbolic links: A @ is appended.
#Sockets: An = is appended.
#Pipes: A | is appended.
# h for human redable sizes
# G for color use
alias ll='ls -lhGF' #  list format and special char to indicate type directory, file, executable or pipe
alias la='ls -AlhGF' # do not list . and ..
alias lA='ls -alhGF' # all
alias vim='nvim'
alias vimdiff='nvim -d'
alias gch='gch'
alias gdb='get_deleted_branches'
alias gpr='git_pull_rebase'
alias grm='git_rebase_main'
alias work='cd ~/work/CalculationProcessor/'
#alias ll="ls -lh --color"
#alias la="ls -ahl --color"
alias grep="grep --color"
#alias diff="git diff"
alias tmux="TERM=xterm-256color tmux"
#alias coding="bash ~/PMilind/repo/helperScripts/tmux/Coding"
#alias vim="/usr/local/bin/vim"

alias coding="ssh -t dev 'tmux a -t Coding'"
alias pk="ssh -t dev 'tmux a -t ProdKafka'"
alias pst="ssh -t dev 'tmux a -t ProdStorm'"
alias pom="ssh -t dev 'tmux a -t OfflineMongo'"
alias pmm="ssh -t dev 'tmux a -t ProdMainMongo'"
alias qe="ssh -t dev 'tmux a -t QA-ENV'"
alias dev="cd ~/PMilind/tech/codebase/"

# Starting and Stopping Tomcat
#alias stc="/Library/Tomcat/bin/startup.sh"
#alias ktc="/Library/Tomcat/bin/shutdown.sh"

function tabname {
    printf "\e]1;$1\a"
}

function winname {
    printf "\e]2;$1\a"
}

# FZF config

# Setup fzf
# ---------
if [[ ! "$PATH" == */Users/milind/.fzf/bin* ]]; then
  export PATH="$PATH:/Users/milind/.fzf/bin"
fi

# Auto-completion
# ---------------
[[ $- == *i* ]] && source "/Users/milind/.fzf/shell/completion.bash" 2> /dev/null

# Key bindings
# ------------
source "/Users/milind/.fzf/shell/key-bindings.bash"

# Setting fd as the default source for fzf
#Only if fd is successfully installed otherwise comment this line
export FD_OPTIONS="--follow --exclude .git --exclude node_modules"
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
export FZF_CTRL_R_OPTS='--sort'
# Open in tmux popup if on tmux, otherwise use --height mode
export FZF_DEFAULT_OPTS="--no-mouse --height 40% --multi --tmux center,40% --layout reverse \
    --border=bold --margin=1 --padding=1  --prompt 'Files >> '  --pointer '>' \
    --walker-skip .git,node_modules,target \
    --header 'CTRL-T: Switch between Files/Directories' \
    --bind 'ctrl-t:transform:[[ ! \$FZF_PROMPT =~ Files ]] &&
    	  echo \"change-prompt(Files >> )+reload(fd --type file)\" ||
    	  echo \"change-prompt(Directories >> )+reload(fd --type directory)\"'
	  --preview ' [[  \$(file --mime {}) =~ binary  &&  ! \$(file --mime {}) =~ directory ]] &&
	      echo {} is a binary file ||
	      ([[  \$FZF_PROMPT =~ Files  ]] && bat --color=always {} ||
	      [[  \$(file --mime {}) =~ directory  ]] && tree -C {})'"

export FZF_DEFAULT_COMMAND="git ls-files --cached --others --exclude-standard | fd --type file --type l $FD_OPTIONS"
export FZF_CTRL_T_COMMAND="fd --type file"


# git hacks
# Git checkout
gch() {
echo "git checkout \$(git branch | fzf| tr -d ‘[:space:]’)"
 git checkout $(git branch | fzf| tr -d ‘[:space:]’)
}

# List the deleted branched
get_deleted_branches() {
    # git fetch --all -p; git branch -vv | grep ": gone]" | awk '{ print '1 }'
     echo "git branch -vv | grep ": gone]" | awk '{ print \$1 }'"
     git branch -vv | grep ": gone]" | awk '{ print $1 }'
}

git_pull_rebase() {
    echo "git pull --rebase"
    git pull --rebase
}

# Rebase on Main branch
git_rebase_main() {
    echo "git rebase main"
    git rebase main
}

# export PATH="/Docker/host/bin:/bin:/home/maverick/.fzf/bin:/home/maverick/.local/bin:/home/maverick/.local/share/coursier/bin:/mnt/c/.tools/.npm-global:/mnt/c/.tools/dotnet:/mnt/c/ES.DevProd/SpringBoard/SBCli/SpringBoardCli:/mnt/c/ES.DevProd/VMSetupScripts:/mnt/c/Program Files (x86)/Microsoft SDKs/Azure/CLI2/wbin:/mnt/c/Program Files (x86)/Microsoft SQL Server/160/DTS/Binn/:/mnt/c/Program Files/Azure Dev CLI:/mnt/c/Program Files/GVFS:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/GitHub CLI/:/mnt/c/Program Files/Microsoft Dev Box Agent/Scripts:/mnt/c/Program Files/Microsoft SQL Server/150/Tools/Binn/:/mnt/c/Program Files/Microsoft SQL Server/Client SDK/ODBC/170/Tools/Binn/:/mnt/c/Program Files/Neovim/bin:/mnt/c/Program Files/PowerShell/7/:/mnt/c/Program Files/dotnet/:/mnt/c/Program Files/nodejs:/mnt/c/Program Files/nodejs/:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/ProgramData/global-npm:/mnt/c/Users/milindvaidya/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.23%252B9/OpenJDK11U-jdk_x64_windows_hotspot_11.0.23_9.zip/jdk-11.0.23+9/bin:/mnt/c/Users/milindvaidya/AppData/Local/Coursier/data/bin:/mnt/c/Users/milindvaidya/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/milindvaidya/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/milindvaidya/AppData/Local/Programs/oh-my-posh/bin:/mnt/c/Users/vmadmin/AppData/Local/Microsoft/WindowsApps:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/system32:/mnt/c/Windows:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/system32:/mnt/c/Windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/nvm:/opt/nvim/:/opt/spark/bin:/sbin:/snap/bin:/usr/bin:/usr/games:/usr/lib/wsl/lib:/usr/local/bin:/usr/local/games:/usr/local/sbin:/usr/sbin"
SPARK_HOME=/opt/spark
export PATH=$PATH:$SPARK_HOME/bin

eval "$(starship init bash)"

